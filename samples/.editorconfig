# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

[*.cs]
charset = utf-8-bom
indent_style = space
indent_size = 4
tab_width = 4
insert_final_newline = true
max_line_length = 120
rulers = 120


##### Code analysis #####

# Default scope configuration
dotnet_code_quality.api_surface = all


### Design rules ###

# CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = warning

dotnet_diagnostic.CA1001.severity = error

# CA1002: Do not expose generic lists
dotnet_diagnostic.CA1002.severity = error
dotnet_code_quality.CA1002.api_surface = public, internal
#tests: dotnet_diagnostic.CA1002.severity = suggestion

dotnet_diagnostic.CA1003.severity = error

# CA1005: Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = error
#tests: dotnet_diagnostic.CA1005.severity = suggestion

dotnet_diagnostic.CA1008.severity = error
dotnet_diagnostic.CA1010.severity = error
dotnet_diagnostic.CA1012.severity = error

# CA1014: Mark assemblies with CLSCompliantAttribute
dotnet_diagnostic.CA1014.severity = warning
#tests: dotnet_diagnostic.CA1014.severity = none

# CA1016: Mark assemblies with AssemblyVersionAttribute
# Need to disable for everything, except for api and nuget applications
dotnet_diagnostic.CA1016.severity = error
#tests: dotnet_diagnostic.CA1016.severity = none

# CA1017: Mark assemblies with ComVisibleAttribute
dotnet_diagnostic.CA1017.severity = error
#tests: dotnet_diagnostic.CA1017.severity = none

dotnet_diagnostic.CA1018.severity = error
dotnet_diagnostic.CA1019.severity = error
dotnet_diagnostic.CA1021.severity = error

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = warning

dotnet_diagnostic.CA1027.severity = error
dotnet_diagnostic.CA1028.severity = error

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity =  none

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = warning

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = suggestion

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = warning

dotnet_diagnostic.CA1034.severity = error
dotnet_diagnostic.CA1036.severity = error
dotnet_diagnostic.CA1040.severity = error
dotnet_diagnostic.CA1041.severity = error
dotnet_diagnostic.CA1043.severity = error
dotnet_diagnostic.CA1044.severity = error
dotnet_diagnostic.CA1045.severity = error

# CA1046: Do not declare protected members in sealed types
# Set to none for DDD applications, because ValueType objects equals operator overload is handful
dotnet_diagnostic.CA1046.severity = error
dotnet_diagnostic.CA1047.severity = error
dotnet_diagnostic.CA1050.severity = error
dotnet_diagnostic.CA1051.severity = error
dotnet_diagnostic.CA1052.severity = error
dotnet_diagnostic.CA1053.severity = error

# CA1054: URI parameters should not be strings
dotnet_diagnostic.CA1054.severity = suggestion

# CA1055: URI return values should not be strings
dotnet_diagnostic.CA1055.severity = suggestion

# CA1056: URI properties should not be strings
dotnet_diagnostic.CA1056.severity = suggestion

dotnet_diagnostic.CA1058.severity = error

# CA1060: Move P/Invokes to NativeMethods class
dotnet_diagnostic.CA1060.severity = error

dotnet_diagnostic.CA1061.severity = error

# CA1062: Validate arguments of public methods
# Enable for libraries
dotnet_diagnostic.CA1062.severity = none

dotnet_diagnostic.CA1063.severity = error
dotnet_diagnostic.CA1064.severity = error
dotnet_diagnostic.CA1065.severity = error
dotnet_diagnostic.CA1066.severity = error
dotnet_diagnostic.CA1067.severity = error
dotnet_diagnostic.CA1068.severity = error
dotnet_diagnostic.CA1069.severity = error
dotnet_diagnostic.CA1070.severity = error


### Documentation rules ###

dotnet_diagnostic.CA1200.severity = error


### Globalization rules ###

dotnet_code_quality.Globalization.api_surface = public

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = none

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = suggestion

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = none

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = error
#tests: dotnet_diagnostic.CA1307.severity = suggestion

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = error
#tests: dotnet_diagnostic.CA1308.severity = none

# CA1309: Use ordinal StringComparison
dotnet_diagnostic.CA1309.severity = suggestion
#tests: dotnet_diagnostic.CA1309.severity = none

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = suggestion
#tests: dotnet_diagnostic.CA1310.severity = none

dotnet_diagnostic.CA1311.severity = error
dotnet_diagnostic.CA2101.severity = error


### Portability and interoperability rules ###

dotnet_diagnostic.CA1401.severity = error
dotnet_diagnostic.CA1416.severity = error
dotnet_diagnostic.CA1417.severity = error
dotnet_diagnostic.CA1418.severity = error
dotnet_diagnostic.CA1419.severity = error
dotnet_diagnostic.CA1420.severity = error
dotnet_diagnostic.CA1421.severity = error
dotnet_diagnostic.CA1422.severity = error


### Maintainability rules ###

dotnet_diagnostic.CA1501.severity = error
dotnet_diagnostic.CA1502.severity = error
dotnet_diagnostic.CA1505.severity = error
dotnet_diagnostic.CA1506.severity = error
dotnet_diagnostic.CA1507.severity = error
dotnet_diagnostic.CA1508.severity = error
dotnet_diagnostic.CA1509.severity = error


### Maintainability rules ###

dotnet_diagnostic.CA1700.severity = error

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = error
#tests: dotnet_diagnostic.CA1707.severity = none

dotnet_diagnostic.CA1708.severity = error

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = suggestion

dotnet_diagnostic.CA1711.severity = error
dotnet_diagnostic.CA1712.severity = error
dotnet_diagnostic.CA1713.severity = error
dotnet_diagnostic.CA1714.severity = error
dotnet_diagnostic.CA1715.severity = error

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = error
dotnet_code_quality.CA1716.api_surface = public

dotnet_diagnostic.CA1717.severity = error
dotnet_diagnostic.CA1720.severity = error
dotnet_diagnostic.CA1721.severity = error
dotnet_diagnostic.CA1724.severity = error
dotnet_diagnostic.CA1725.severity = error
dotnet_diagnostic.CA1727.severity = error


### Performance rules ###

dotnet_diagnostic.CA1802.severity = error
dotnet_diagnostic.CA1805.severity = error
dotnet_diagnostic.CA1806.severity = error
dotnet_diagnostic.CA1810.severity = error

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = none

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = warning

dotnet_diagnostic.CA1814.severity = error
dotnet_diagnostic.CA1815.severity = error

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = warning
#tests: dotnet_diagnostic.CA1819.severity = none

dotnet_diagnostic.CA1820.severity = error
dotnet_diagnostic.CA1821.severity = error

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = none

dotnet_diagnostic.CA1823.severity = error
dotnet_diagnostic.CA1824.severity = error
dotnet_diagnostic.CA1825.severity = error

# CA1826: Use property instead of Linq Enumerable method
dotnet_diagnostic.CA1826.severity = none

dotnet_diagnostic.CA1827.severity = error
dotnet_diagnostic.CA1828.severity = error
dotnet_diagnostic.CA1829.severity = error
dotnet_diagnostic.CA1830.severity = error

# CA1831: Use AsSpan instead of Range-based indexers for string when appropriate
dotnet_diagnostic.CA1831.severity = suggestion

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array
dotnet_diagnostic.CA1832.severity = suggestion

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array
dotnet_diagnostic.CA1833.severity = suggestion

dotnet_diagnostic.CA1834.severity = error

# CA1835: Prefer the memory-based overloads of ReadAsync/WriteAsync methods in stream-based classes
dotnet_diagnostic.CA1835.severity = suggestion

dotnet_diagnostic.CA1836.severity = error
dotnet_diagnostic.CA1837.severity = error
dotnet_diagnostic.CA1838.severity = error
dotnet_diagnostic.CA1839.severity = error
dotnet_diagnostic.CA1840.severity = error
dotnet_diagnostic.CA1841.severity = error
dotnet_diagnostic.CA1842.severity = error
dotnet_diagnostic.CA1843.severity = error
dotnet_diagnostic.CA1844.severity = error
dotnet_diagnostic.CA1845.severity = error

# CA1846: Prefer AsSpan over Substring
dotnet_diagnostic.CA1846.severity = suggestion

dotnet_diagnostic.CA1847.severity = error
dotnet_diagnostic.CA1848.severity = error
dotnet_diagnostic.CA1849.severity = error
dotnet_diagnostic.CA1850.severity = error
dotnet_diagnostic.CA1851.severity = error

# CA1852: Seal internal types
dotnet_diagnostic.CA1852.severity = none

dotnet_diagnostic.CA1853.severity = error
dotnet_diagnostic.CA1854.severity = error
dotnet_diagnostic.CA1855.severity = error
dotnet_diagnostic.CA1858.severity = error


### Reliability rules ###

dotnet_diagnostic.CA2000.severity = error
dotnet_diagnostic.CA2002.severity = error

# CA2007: Do not directly await a Task
dotnet_diagnostic.CA2007.severity = none

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = none

dotnet_diagnostic.CA2009.severity = error
dotnet_diagnostic.CA2011.severity = error
dotnet_diagnostic.CA2012.severity = error
dotnet_diagnostic.CA2013.severity = error
dotnet_diagnostic.CA2014.severity = error
dotnet_diagnostic.CA2015.severity = error

# CA2016: Forward the CancellationToken parameter to methods that take one
dotnet_diagnostic.CA2016.severity = warning

dotnet_diagnostic.CA2017.severity = error
dotnet_diagnostic.CA2018.severity = error
dotnet_diagnostic.CA2019.severity = error
dotnet_diagnostic.CA2020.severity = error


### Security rules ###

dotnet_analyzer_diagnostic.category-Security.severity = warning


### Reliability rules ###

dotnet_diagnostic.CA1801.severity = error

# CA1816: Call GC.SuppressFinalize correctly
dotnet_diagnostic.CA1816.severity = suggestion

dotnet_diagnostic.CA2200.severity = error
dotnet_diagnostic.CA2201.severity = error
dotnet_diagnostic.CA2207.severity = error
dotnet_diagnostic.CA2208.severity = error
dotnet_diagnostic.CA2211.severity = error
dotnet_diagnostic.CA2213.severity = error
dotnet_diagnostic.CA2214.severity = error
dotnet_diagnostic.CA2215.severity = error
dotnet_diagnostic.CA2216.severity = error
dotnet_diagnostic.CA2217.severity = error
dotnet_diagnostic.CA2218.severity = error
dotnet_diagnostic.CA2219.severity = error
dotnet_diagnostic.CA2224.severity = error

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

dotnet_diagnostic.CA2226.severity = error
dotnet_diagnostic.CA2227.severity = error
dotnet_diagnostic.CA2229.severity = error

# CA2231: Overload operator equals on overriding ValueType.Equals
dotnet_diagnostic.CA2231.severity = suggestion

# CA2234: Pass System.Uri objects instead of strings
dotnet_diagnostic.CA2234.severity = suggestion

dotnet_diagnostic.CA2235.severity = error
dotnet_diagnostic.CA2237.severity = error
dotnet_diagnostic.CA2241.severity = error
dotnet_diagnostic.CA2242.severity = error
dotnet_diagnostic.CA2243.severity = error
dotnet_diagnostic.CA2244.severity = error
dotnet_diagnostic.CA2245.severity = error
dotnet_diagnostic.CA2246.severity = error
dotnet_diagnostic.CA2247.severity = error
dotnet_diagnostic.CA2248.severity = error
dotnet_diagnostic.CA2249.severity = error
dotnet_diagnostic.CA2250.severity = error
dotnet_diagnostic.CA2251.severity = error
dotnet_diagnostic.CA2252.severity = error
dotnet_diagnostic.CA2253.severity = error
dotnet_diagnostic.CA2254.severity = error
dotnet_diagnostic.CA2255.severity = error
dotnet_diagnostic.CA2256.severity = error
dotnet_diagnostic.CA2257.severity = error
dotnet_diagnostic.CA2258.severity = error
dotnet_diagnostic.CA2259.severity = error
dotnet_diagnostic.CA2260.severity = error



##### Code style #####

# some of the rules are marked as errors because dotnet format might fail to fix them afterwards, e.g. field and constructor parameter names collision, etc.

dotnet_diagnostic.IDE0036.severity = warning
dotnet_diagnostic.IDE0064.severity = error
dotnet_diagnostic.IDE0010.severity = warning
dotnet_diagnostic.IDE0070.severity = error
dotnet_diagnostic.IDE0072.severity = warning
dotnet_diagnostic.IDE0082.severity = error
dotnet_diagnostic.IDE0073.severity = none
dotnet_diagnostic.IDE0001.severity = warning
dotnet_diagnostic.IDE0002.severity = warning
dotnet_diagnostic.IDE0004.severity = warning
dotnet_diagnostic.IDE0005.severity = warning
dotnet_diagnostic.IDE0035.severity = warning
dotnet_diagnostic.IDE0051.severity = warning
dotnet_diagnostic.IDE0052.severity = warning
dotnet_diagnostic.IDE0079.severity = warning
dotnet_diagnostic.IDE0080.severity = warning
dotnet_diagnostic.IDE0100.severity = warning
dotnet_diagnostic.IDE0110.severity = warning
dotnet_diagnostic.IDE0076.severity = warning
dotnet_diagnostic.IDE0077.severity = warning

# this and Me preferences (IDE0003 and IDE0009)
dotnet_diagnostic.IDE0003.severity = error
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false

# Use language keywords instead of framework type names for type references (IDE0049)
dotnet_diagnostic.IDE0049.severity = error
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Add accessibility modifiers (IDE0040)
dotnet_diagnostic.IDE0040.severity = error
dotnet_style_require_accessibility_modifiers = always

# Add readonly modifier (IDE0044)
dotnet_diagnostic.IDE0044.severity = error
dotnet_style_readonly_field = true

# Make local function static (IDE0062)
dotnet_diagnostic.IDE0062.severity = suggestion
csharp_prefer_static_local_function = false

# Parentheses preferences (IDE0047 and IDE0048)
dotnet_diagnostic.IDE0047.severity = warning
dotnet_diagnostic.IDE0048.severity = warning
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary

# Use object initializers (IDE0017)
dotnet_diagnostic.IDE0017.severity = warning
dotnet_style_object_initializer = true

# Inline variable declaration (IDE0018)
dotnet_diagnostic.IDE0018.severity = warning
csharp_style_inlined_variable_declaration = true

# Use collection initializers (IDE0028)
dotnet_diagnostic.IDE0028.severity = warning
dotnet_style_collection_initializer = true

# Use auto-implemented property (IDE0032)
dotnet_diagnostic.IDE0032.severity = error
dotnet_style_prefer_auto_properties = true

# Use explicitly provided tuple name (IDE0033)
dotnet_diagnostic.IDE0033.severity = error
dotnet_style_explicit_tuple_names = true

# Simplify 'default' expression (IDE0034)
dotnet_diagnostic.IDE0034.severity = warning
csharp_prefer_simple_default_expression = true

# Use inferred member names (IDE0037)
dotnet_diagnostic.IDE0037.severity = error
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = false

# Use local function instead of lambda (IDE0039)
dotnet_diagnostic.IDE0039.severity = error
csharp_style_prefer_local_over_anonymous_function = true

# Deconstruct variable declaration (IDE0042)
dotnet_diagnostic.IDE0042.severity = suggestion
csharp_style_deconstructed_variable_declaration = true

# Use conditional expression for assignment (IDE0045)
dotnet_diagnostic.IDE0045.severity = suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true

# Use conditional expression for return (IDE0046)
dotnet_diagnostic.IDE0046.severity = suggestion
dotnet_style_prefer_conditional_expression_over_return = true

# Use compound assignment (IDE0054 and IDE0074)
dotnet_diagnostic.IDE0054.severity = warning
dotnet_diagnostic.IDE0074.severity = warning
dotnet_style_prefer_compound_assignment = true

# Use index operator (IDE0056)
dotnet_diagnostic.IDE0056.severity = warning
csharp_style_prefer_index_operator = true

# Use range operator (IDE0057)
dotnet_diagnostic.IDE0057.severity = warning
csharp_style_prefer_range_operator = true

# Simplify interpolation (IDE0071)
dotnet_diagnostic.IDE0071.severity = warning
dotnet_style_prefer_simplified_interpolation = true

# Simplify conditional expression (IDE0075)
dotnet_diagnostic.IDE0075.severity = warning
dotnet_style_prefer_simplified_boolean_expressions = true

# Simplify new expression (IDE0090)
dotnet_diagnostic.IDE0090.severity = warning
csharp_style_implicit_object_creation_when_type_is_apparent = true

# Use tuple to swap values (IDE0180)
dotnet_diagnostic.IDE0180.severity = warning
csharp_style_prefer_tuple_swap = true

# Namespace declaration preferences (IDE0160 and IDE0161)
dotnet_diagnostic.IDE0160.severity = warning
dotnet_diagnostic.IDE0161.severity = warning
csharp_style_namespace_declarations = file_scoped:silent

# Use throw expression (IDE0016)
dotnet_diagnostic.IDE0016.severity = error
csharp_style_throw_expression = true

# Use coalesce expression (IDE0029 and IDE0030)
dotnet_diagnostic.IDE0029.severity = warning
dotnet_diagnostic.IDE0030.severity = warning
dotnet_style_coalesce_expression = true

# Use null propagation (IDE0031)
dotnet_diagnostic.IDE0031.severity = warning
dotnet_style_null_propagation = true

# Use 'is null' check (IDE0041)
dotnet_diagnostic.IDE0041.severity = warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true

# Prefer 'null' check over type check (IDE0150)
dotnet_diagnostic.IDE0150.severity = warning
csharp_style_prefer_null_check_over_type_check = true

# Use conditional delegate call (IDE1005)
dotnet_diagnostic.IDE1005.severity = warning
csharp_style_conditional_delegate_call = true

# 'var' preferences (IDE0007 and IDE0008)
dotnet_diagnostic.IDE0007.severity = error
dotnet_diagnostic.IDE0008.severity = error
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true

# Use expression body for constructors (IDE0021)
dotnet_diagnostic.IDE0021.severity = warning
csharp_style_expression_bodied_constructors = false:silent

# Use expression body for methods (IDE0022)
dotnet_diagnostic.IDE0022.severity = warning
csharp_style_expression_bodied_methods = false:silent

# Use expression body for operators (IDE0023 and IDE0024)
dotnet_diagnostic.IDE0023.severity = warning
dotnet_diagnostic.IDE0024.severity = warning
csharp_style_expression_bodied_operators = false:silent

# Use expression body for properties (IDE0025)
dotnet_diagnostic.IDE0025.severity = warning
csharp_style_expression_bodied_properties = true:silent

# Use expression body for indexers (IDE0026)
dotnet_diagnostic.IDE0026.severity = warning
csharp_style_expression_bodied_indexers = true:silent

# Use expression body for accessors (IDE0027)
dotnet_diagnostic.IDE0027.severity = warning
csharp_style_expression_bodied_accessors = true:silent

# Use expression body for lambdas (IDE0053)
dotnet_diagnostic.IDE0053.severity = warning
csharp_style_expression_bodied_lambdas = true:silent

# Use expression body for local functions (IDE0061)
dotnet_diagnostic.IDE0061.severity = warning
csharp_style_expression_bodied_local_functions = when_on_single_line:silent

# Use pattern matching to avoid 'as' followed by a 'null' check (IDE0019)
dotnet_diagnostic.IDE0019.severity = warning
csharp_style_pattern_matching_over_as_with_null_check = true

# Use pattern matching to avoid 'is' check followed by a cast (IDE0020 and IDE0038)
dotnet_diagnostic.IDE0020.severity = error
dotnet_diagnostic.IDE0038.severity = error
csharp_style_pattern_matching_over_is_with_cast_check = true

# Use switch expression (IDE0066)
dotnet_diagnostic.IDE0066.severity = warning
csharp_style_prefer_switch_expression = true

# Use pattern matching (IDE0078)
dotnet_diagnostic.IDE0078.severity = suggestion
csharp_style_prefer_pattern_matching = true

# Use pattern matching (not operator) (IDE0083)
dotnet_diagnostic.IDE0083.severity = warning
csharp_style_prefer_not_pattern = true

# Simplify property pattern (IDE0170)
dotnet_diagnostic.IDE0170.severity = warning
csharp_style_prefer_extended_property_pattern = true

# Add braces (IDE0011)
dotnet_diagnostic.IDE0011.severity = warning
csharp_prefer_braces = true:silent

# Use simple 'using' statement (IDE0063)
dotnet_diagnostic.IDE0063.severity = warning
csharp_prefer_simple_using_statement = true:suggestion

# 'using' directive placement (IDE0065)
dotnet_diagnostic.IDE0065.severity = error
csharp_using_directive_placement = outside_namespace:silent

# Remove unnecessary expression value (IDE0058)
dotnet_diagnostic.IDE0058.severity = suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable

# Remove unnecessary value assignment (IDE0059)
dotnet_diagnostic.IDE0059.severity = warning
csharp_style_unused_value_assignment_preference = discard_variable

# Remove unused parameter (IDE0060)
dotnet_diagnostic.IDE0060.severity = warning
dotnet_code_quality_unused_parameters = all

# Namespace does not match folder structure (IDE0130)
# BUG: switch to warning once issue below is fixed
# https://github.com/dotnet/format/issues/1623
dotnet_diagnostic.IDE0130.severity = suggestion
dotnet_style_namespace_match_folder = true


### Formatting rules ###

dotnet_diagnostic.IDE0055.severity = warning

dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false

csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

##### Naming rules #####

dotnet_diagnostic.IDE1006.severity = error

# almost fully copied from Roslyn editor config

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase
dotnet_naming_rule.static_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# async methods has "Async" postfix
# dotnet_naming_rule.methods_should_have_async_postfix.severity = suggestion
# dotnet_naming_rule.methods_should_have_async_postfix.symbols = async_methods_and_local_functions
# dotnet_naming_rule.methods_should_have_async_postfix.style = async_methods_style

# dotnet_naming_symbols.async_methods_and_local_functions.applicable_kinds = method, local_function
# dotnet_naming_symbols.async_methods_and_local_functions.required_modifiers = async

# dotnet_naming_style.async_methods_style.capitalization = pascal_case
# dotnet_naming_style.async_methods_style.required_suffix = Async

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case



### Not documented rules
# https://github.com/dotnet/docs/issues/28791

dotnet_style_operator_placement_when_wrapping = beginning_of_line
csharp_style_prefer_method_group_conversion = true:warning
csharp_style_prefer_top_level_statements = true:error
